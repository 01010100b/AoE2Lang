; ===== Usage

; - Load this file at the top of your AI.
; - Define the goals below.
; - Get the info for a specific unit as follows:

;(defrule
;	(true)
;=>
;	(set-goal gl-unitinfo-unit-id skirmisher) ; let's get the info for a skirm
;	(up-get-rule-id gl-unitinfo-return-addr) ; set return address...
;	(up-modify-goal gl-unitinfo-return-addr c:+ 1) ; ...to the rule following this one
;	(up-jump-direct g: gl-unitinfo-func-addr); and call the lookup function
;)
; the goals gl-unitinfo-unit-* (see below) will now have been set and can be read

; ===== The following goals need to be defined, they do not need to be defined to any particular value nor do they need to have consecutive values

(defconst gl-unitinfo-func-addr 1)
(defconst gl-unitinfo-return-addr 2)

(defconst gl-unitinfo-unit-id 3) ; the id of the unit, needs to be exact, no line or base-unit stuff
(defconst gl-unitinfo-unit-armor1-id 4) ; id of armor 1, or -1
(defconst gl-unitinfo-unit-armor1-amount 5) ; amount of armor 1, or -1
(defconst gl-unitinfo-unit-armor2-id 6) ; id of armor 2, or -1
(defconst gl-unitinfo-unit-armor2-amount 7) ; amount of armor 2, or -1
(defconst gl-unitinfo-unit-armor3-id 8) ; id of armor 3, or -1
(defconst gl-unitinfo-unit-armor3-amount 9) ; amount of armor 3, or -1
(defconst gl-unitinfo-unit-attack1-id 10) ; id of attack 1, or -1
(defconst gl-unitinfo-unit-attack1-amount 11) ; amount of attack 1, or -1
(defconst gl-unitinfo-unit-attack2-id 12) ; id of attack 2, or -1
(defconst gl-unitinfo-unit-attack2-amount 13) ; amount of attack 2, or -1
(defconst gl-unitinfo-unit-attack3-id 14) ; id of attack 3, or -1
(defconst gl-unitinfo-unit-attack3-amount 15) ; amount of attack 3, or -1
(defconst gl-unitinfo-unit-upgrade-id 16) ; id of the unit this unit upgrades to, or -1 (not implemented yet)
(defconst gl-unitinfo-unit-upgrade-research 17) ; id of the research for upgrading this unit, or -1 (not implemented yet)
(defconst gl-unitinfo-unit-available 18) ; 1 if available, 0 if not or if not a valid unit id (same as the unit-available/building-available facts)

(defconst gl-unitinfo-table-addr 19) ; internal use
(defconst gl-unitinfo-table-offset 20) ; internal use

; ===== DO NOT EDIT BEYOND THIS POINT

; Lookup function

(defrule
	(true)
=>
	(up-get-rule-id gl-unitinfo-func-addr)
	(up-modify-goal gl-unitinfo-func-addr c:+ 1)
	(up-jump-rule 3)
)

(defrule
	(true)
=>
	(set-goal gl-unitinfo-unit-armor1-id -1)
	(set-goal gl-unitinfo-unit-armor1-amount -1)
	(set-goal gl-unitinfo-unit-armor2-id -1)
	(set-goal gl-unitinfo-unit-armor2-amount -1)
	(set-goal gl-unitinfo-unit-armor3-id -1)
	(set-goal gl-unitinfo-unit-armor3-amount -1)
	(set-goal gl-unitinfo-unit-attack1-id -1)
	(set-goal gl-unitinfo-unit-attack1-amount -1)
	(set-goal gl-unitinfo-unit-attack2-id -1)
	(set-goal gl-unitinfo-unit-attack2-amount -1)
	(set-goal gl-unitinfo-unit-attack3-id -1)
	(set-goal gl-unitinfo-unit-attack3-amount -1)
	(set-goal gl-unitinfo-unit-upgrade-id -1)
	(set-goal gl-unitinfo-unit-upgrade-research -1)
	(set-goal gl-unitinfo-unit-available 0)
)

(defrule
	(or
		(up-compare-goal gl-unitinfo-unit-id c:< 0)
		(up-compare-goal gl-unitinfo-unit-id c:>= $TABLE_SIZE$)
	)
=>
	(up-chat-data-to-self "Unit id out of range: %d" g: gl-unitinfo-unit-id)
	(up-jump-direct g: gl-unitinfo-return-addr)
)

(defrule
	(true)
=>
	(up-modify-goal gl-unitinfo-table-offset g:= gl-unitinfo-unit-id)
	(up-modify-goal gl-unitinfo-table-offset c:* 2)
	(up-modify-goal gl-unitinfo-table-offset g:+ gl-unitinfo-table-addr)
	(up-jump-direct g: gl-unitinfo-table-offset)
)

; Lookup table

(defrule
	(true)
=>
	(up-get-rule-id gl-unitinfo-table-addr)
	(up-modify-goal gl-unitinfo-table-addr c:+ 1)
	(up-jump-rule $TABLE_RULES$)
)

